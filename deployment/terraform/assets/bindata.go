// Code generated by go-bindata. DO NOT EDIT.
// sources:
// .terraform.lock.hcl (1.181kB)
// cluster.tf (20.396kB)
// dashboard.yaml (231B)
// dashboard_data.json (40.142kB)
// datasource.yaml (296B)
// es_dashboard_data.json (8.51kB)
// outputs.tf (589B)
// variables.tf (1.301kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _TerraformLockHcl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xd2\x4d\xab\x5b\x47\x0f\x07\xf0\xbd\x3f\xc5\xe0\x2c\xf3\xe0\x8c\x34\x6f\x52\x20\xcf\xaa\x2f\x90\x52\xba\x69\x49\x69\xe9\x42\x1a\x49\xb9\x87\xfa\xda\x89\x7d\x9c\xe6\xde\xd2\x7e\xf6\x72\x08\x14\x77\x96\x23\xfe\x3f\x84\xa4\x17\xe9\xc7\x87\xe5\x9a\x62\x39\x7a\x5a\xae\xe9\x51\x96\xd3\x2a\xcb\xc9\x2d\xc9\x6d\x3d\x3f\xca\xba\x4c\x39\x1e\x9f\x92\x3e\xa5\xfd\xea\x97\x8b\xc4\xf9\xf2\x98\x96\xd3\xb2\xee\x0f\xbb\x17\xe9\x7b\x39\xdd\xe4\x98\xdc\x96\x75\x0b\x3f\x25\xf5\x74\x3c\x5f\xd7\xb4\x9c\x52\xdc\xd6\xdb\xc5\xd3\xed\x83\xc9\xea\xd7\xc3\x6e\xf7\xe1\x72\xfe\xb4\x98\x5f\xd2\xfe\xe2\xef\x97\xeb\x7a\x79\x3a\xfc\x4b\x1e\x96\xf3\xab\x07\xb9\x3e\x2c\xf3\x7c\xf9\xf0\x4a\xfe\xb8\xee\xd3\x9f\xbb\x94\x3e\xf9\xe5\xba\x9c\x4f\x69\x7b\x6f\xd2\xbe\x1c\x46\x3b\xe0\x7e\x97\xd2\x3c\x9f\xae\xeb\x65\xeb\xf6\xba\x15\xfe\xfe\x7f\x2a\x87\xbc\x15\x36\xc4\xb7\xbf\x5f\x77\x5b\x68\xff\x00\xaf\x3f\xe7\xf7\xc7\xdb\xcf\xfc\xcb\x77\x5f\x3f\x3e\xbf\x7c\xfb\xf6\x5d\xf9\x69\x6d\xdf\xbe\x7f\xf7\xd5\x37\x3f\x7c\x7c\x75\x7c\xb8\xe2\xa7\xdf\x3f\xbe\x7d\xf9\x79\x6d\xe3\xf9\xfa\x66\xff\xbf\x2f\xb1\xe7\x87\xd7\xd9\x47\x0b\x85\xea\xb3\xa2\x75\xd6\x59\x7b\xed\x60\xd6\x6a\x86\xae\x8a\x95\x86\x15\x32\x29\x58\x11\x71\xfa\xc4\x4c\xbd\x30\x90\x12\xb7\x3a\xeb\x1d\x55\x32\x15\x10\x08\x47\x8e\x9c\x9b\x91\x52\x66\x6c\x59\x6b\xb1\xcc\x0d\x11\x89\x4c\x6b\xb3\x3a\xea\x64\xc3\x42\x8a\x3d\x6a\x56\x9b\x82\x85\xe8\x9e\xea\xd0\x8b\x75\x6c\xa2\xc8\xcc\x93\xa7\x15\xf0\xc0\x3a\x9a\xf1\xa0\xe0\xc8\xa5\x08\x59\x48\xb6\x46\x2d\xa0\xf7\x16\x68\xbd\x32\x86\xcc\xaa\x77\x54\x25\x9f\x85\x3b\xb5\x56\xc1\xab\x99\x91\x99\x01\x77\xc7\x19\x3a\xb0\x41\x57\x1a\x51\x07\x18\x75\x99\x85\x18\x75\x02\x04\x95\xd9\x46\x01\xe6\x3b\x6a\xe4\xa1\x3c\x69\x8c\xe6\x61\x9d\x3b\x6a\x47\xec\xc6\x50\x45\xb1\x45\xc9\x94\xa1\xa8\x0a\x44\x27\x6e\xc5\x44\xc6\x10\x9b\xc2\x1c\xd1\x29\x8f\x7b\x0a\xd5\x38\x6a\xcf\x2c\x84\x43\x42\x4a\xef\xb3\x07\x00\xcf\x61\x3e\x87\x8d\x22\xa5\xd9\x00\x34\x31\xa8\x6d\xcc\x5c\x79\x18\x0d\x0d\x32\xe8\xf9\x8e\xe2\x92\xbd\x88\x17\xcb\x53\xa1\xa1\xc3\x70\x6f\x42\xe2\xde\xa6\xd6\x11\xa3\x43\xb1\x5e\x11\x74\x8e\x89\xe8\x23\x5a\x9e\xc0\x26\x95\xaa\x40\xfe\x0f\xa5\x80\x12\xd4\x2a\x75\xe1\x2e\xbe\x0d\x6b\x30\x55\xcd\x11\x04\x20\x55\x2b\x7a\x31\xa2\xad\x29\x29\xa1\x75\x66\x6d\x94\x2d\xd7\x90\x8a\xed\x8e\x12\x60\x8d\xca\x4a\x19\x32\x48\x8e\x8c\x03\x95\xb9\x42\x2b\xee\x11\x14\x34\x31\x77\x9f\xb3\x31\x6e\x73\x0d\x9d\x3e\x5a\x2f\xa5\x35\xed\x44\x78\x4f\x95\xaa\xcd\x50\x55\xa2\x21\x52\xd3\x3c\x79\xdb\x7d\xc7\x46\x51\x07\x71\x54\x63\x1c\x11\x63\x0c\x07\xec\x6a\x73\x0c\x1f\x44\x43\x54\x5d\xe4\x8e\x9a\x22\xd6\xc3\x9a\x0f\x76\xf1\x52\xbc\xdb\xa8\x5e\x68\x16\x85\x36\x91\xa4\x55\xc2\x40\x01\xa1\x29\xb5\xcf\x09\xee\x23\x67\x62\xf3\x0e\x62\xf7\x77\x15\xe8\xe2\x4c\xd4\x4b\xcb\x25\x9b\xb3\x64\xa2\xa0\xdc\x28\x74\x1a\x83\x63\x86\x2a\x54\x00\xa5\x92\x42\xd7\xb0\xcc\xc2\xd6\xd9\xd8\x7a\x7c\x39\x86\xdf\x76\x7f\xed\xfe\x09\x00\x00\xff\xff\xf6\x52\xc9\xf1\x9d\x04\x00\x00")

func TerraformLockHclBytes() ([]byte, error) {
	return bindataRead(
		_TerraformLockHcl,
		".terraform.lock.hcl",
	)
}

func TerraformLockHcl() (*asset, error) {
	bytes, err := TerraformLockHclBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".terraform.lock.hcl", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4a, 0x91, 0x96, 0x18, 0x1e, 0x3b, 0x1b, 0xb5, 0xa0, 0x9, 0x50, 0x4, 0x1b, 0x8a, 0x20, 0xdb, 0xee, 0xef, 0x15, 0xfe, 0x54, 0x24, 0x1e, 0xe4, 0xbf, 0xad, 0xab, 0x77, 0xb0, 0x27, 0x55, 0x27}}
	return a, nil
}

var _clusterTf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\xfd\x8f\xdb\xb8\x95\xbf\xfb\xaf\x78\xd5\x06\x4d\x52\x44\x92\x3d\x9e\xec\x26\x6e\x67\x17\x69\xae\x5b\x14\xd8\x8f\xe0\x7a\x77\xc5\x21\x1d\x08\x94\xf8\x6c\x73\x47\x12\xb9\x24\x65\xc7\x9b\xce\xfd\xed\x07\x52\xd4\x87\x65\xc9\xd6\x38\x93\x4d\xd2\xcd\x04\x01\x6c\xbe\x0f\x3e\xbe\x6f\x52\x94\x27\x1a\xa5\x24\x4b\x2e\x33\x78\x3b\x01\x90\xf8\x73\xc1\x24\xd2\x48\x48\xbe\x61\x14\xa5\xb2\xc3\x00\x64\xab\xe0\xca\x7d\x06\x50\xbc\x90\x09\x02\x5c\x81\xb7\x26\x6a\xcd\x12\x2e\x45\x48\xb6\xca\x73\xf0\x0d\x4a\xc5\x78\x6e\xe0\xff\xf7\x35\xcc\x83\x69\x09\xb8\x9d\x98\xff\xb7\x93\x49\xc5\x1d\x3c\x43\xe4\x66\x5e\x19\x0a\xb8\x82\x0d\x91\x01\xd9\xaa\xa8\x1c\x99\x00\x08\xc9\x97\x2c\xc5\x16\xc8\x8d\x18\x56\x94\x68\x62\xd9\x38\x7c\x0f\xbc\xa4\x90\x12\x73\xed\xc1\xdb\x3d\x78\x42\xd2\x14\x65\xc4\x28\xe6\x9a\xe9\xdd\x30\xa2\x2a\xe2\x1c\x75\xc4\xa8\xf2\xc0\x53\x98\x62\xa2\x91\x96\x52\x6e\x44\x12\x31\xea\x24\x41\x15\x6d\x44\x62\x84\x90\xe8\x34\x62\xe9\x6f\x70\x17\x09\xc2\xa4\x07\xde\x0d\xee\x4a\x42\x33\x96\x93\x0c\xc1\x2a\xed\xc1\x5b\x43\x9f\xa4\x85\xd2\x28\xed\xf8\xad\x7f\x83\x3b\x4b\x64\x16\x5c\xc4\x29\x4b\x0c\x1f\xb8\x02\xb3\xd0\x47\x06\x5d\xa9\x75\xd4\x40\x1e\x1f\xce\xcb\x72\xa5\x49\x9e\xa0\x07\x1e\x11\x22\x52\x28\x37\x28\xcb\xe9\x35\x59\x35\xf6\xfb\xc1\xc8\x31\x20\x05\x11\xc2\x7f\xf0\x36\xe1\x45\xae\x03\x96\x53\x7c\x73\xeb\x59\xa3\x4d\x00\x12\x9e\xe7\x98\x68\x63\xa5\x92\xcf\x17\xf0\x5f\x6b\x04\x8a\x4b\x52\xa4\x1a\x0a\x85\xd2\xae\x70\xc9\x25\xf0\x42\xc2\x8b\xef\xff\x66\xd1\xf4\x4e\xd8\xe9\x94\x5a\x97\x6e\x60\x30\xcd\x40\x11\x17\xb9\x2e\xca\xb1\x35\x57\x1a\xae\x40\x61\xba\x0c\xdc\x22\x99\xa8\x66\x26\x19\x83\xe6\xaf\x71\x03\x92\xb1\x09\x40\xb5\xec\xc8\x4d\x64\xa1\x42\x44\x7b\xe3\xfb\x26\xb0\x5c\xda\xa6\x0a\x6e\x70\x17\x30\x6a\x57\x59\xe4\xba\x3b\x57\x9b\x9b\x45\x70\xae\xa0\x30\x29\x24\xd3\xbb\x68\x25\x79\x21\x8c\xc7\xc0\x15\xbc\xae\x02\xa6\x03\x36\x6c\x5e\x4f\xaf\x03\x46\x9f\x1c\xc1\x88\x56\x5c\x29\xe6\x10\x27\x00\xd7\x46\x01\x74\x97\x93\x8c\x25\xe0\x49\xce\x75\x14\xa7\x3c\xb9\x89\x28\x6e\x98\xb1\x75\x69\x8b\x25\x97\x11\x92\x64\xed\x24\x3e\xc0\xb3\x48\x09\xcf\x35\xe6\xba\x0e\xe3\x0d\x4f\x8b\x0c\x23\xc5\x7e\x31\x7a\x4b\x39\xbf\x29\xc4\xa3\x03\xd2\x60\x43\xd2\x02\x9f\x80\xd7\x42\xf7\x9e\x40\x5e\xa4\xe9\xe3\x7d\x46\xce\x00\x63\x19\x19\xf4\x3d\x46\xb7\x95\xc1\x6d\x7e\x30\x19\xc4\xa4\x08\x13\x00\xd5\x32\xab\xc4\xd3\xd8\x26\x23\x5a\xa3\xcc\xb8\xd2\x51\xca\x12\xcc\x15\x46\x36\x35\x18\x0c\x8a\x4a\xb3\x9c\x68\x97\x8a\xc2\x35\xcf\x30\x2c\xbd\x2e\x6c\xe8\x5a\x2c\x7c\xc7\xc2\xeb\x15\x44\x62\xc6\x35\xfa\xf8\x06\x93\x4a\x1e\x96\xa7\x2c\xc7\xda\xe8\x00\xde\x76\x6d\x52\xd5\x6b\xf8\x1d\xf8\x4b\x08\x37\x44\x86\x29\x8b\xc3\x24\xe5\x05\x0d\x2b\x1f\x0a\x63\xce\xb5\xbf\x64\x39\x53\x6b\xa4\x70\xfd\x47\xa0\x1c\x30\x59\x73\x78\xf8\x0f\xc2\x34\xcb\x57\x36\x88\x2c\x91\xcf\x72\xa6\x83\x20\x78\xf8\x47\x50\x29\xa2\x80\x99\xc1\xce\xd1\x7b\x52\xcd\x58\x12\xea\x44\x44\x71\x2c\x1f\xc2\xbf\x40\x15\x94\x83\x46\x04\x9f\x40\x88\x3a\x09\x33\x4e\x8b\x14\x55\x43\x62\x31\x32\x4e\x85\xe4\x31\x82\x23\x6d\xc0\xdb\x15\x6a\xf0\x7f\xfe\x11\x7c\x58\x6b\x2d\xd4\x22\x0c\xb7\xdb\x6d\x20\xb8\xd2\x2b\x89\xea\xe7\x34\xe0\x72\x15\x66\x48\x19\x09\x6f\x70\xa7\xc2\x17\x2f\x5f\xbe\xbc\x7c\xf9\xed\xb3\x80\xa8\x04\xfe\x05\x2b\xb1\x02\xdf\xa7\x48\x64\xc6\x65\x5b\xa0\xb0\x50\x32\x54\x6b\x22\xd1\xd0\x49\x96\xaf\x54\x58\x71\xf5\x89\x4c\xd6\x6c\x83\xbe\x83\x04\x2b\xb1\xea\x48\xac\xd6\xe0\x27\xf0\xd0\x2e\xf8\x9f\x1e\xc5\x18\x5e\x2b\xb6\xca\x91\xfa\xf1\xee\xea\xae\xbc\xaf\xed\xda\x16\x61\x48\x84\xee\x2e\x4d\x14\x71\x28\x51\x70\x65\x80\xf0\xe0\x51\xaa\xe2\x48\x62\x8a\x44\x21\xf8\x89\x7a\xec\x8b\x15\x5d\x41\x46\x58\xfe\x4f\x0f\xbe\x2e\x95\x4c\x84\x0e\x4b\xf7\x54\x41\xca\x94\x0e\x68\x68\xb0\xec\xe7\x87\x9d\x85\x10\xa1\x7d\xab\xe3\x1d\x14\x82\x12\x8d\x03\x70\xeb\x30\x69\x6a\xf0\xb2\x9d\xfa\x39\xf5\x93\x94\x61\xae\xfd\x67\xc1\xf4\x34\x45\xb3\xa6\x8a\x6c\x36\x1b\x41\x25\x79\x86\x7a\x8d\x85\xf2\x73\x4e\x8d\xb7\x0b\x2e\x35\xca\xd3\x94\x79\x91\x91\x44\xa7\x90\xb2\xbc\x78\xe3\x6b\xce\x53\xe5\x9b\xb6\xa1\xfd\xfd\x69\x70\x19\x4c\xfd\xd9\x74\xfe\xdc\xaf\xdb\x85\xeb\xaa\x2b\x18\xac\x66\x19\x6a\xc9\x12\x75\x5e\x45\x73\xc4\x9f\x5c\x19\xf3\xf4\x3c\x78\x93\x12\xb9\xb2\xd9\x68\x5c\x59\x82\xaf\x61\x0a\xdf\xc0\x0c\x16\x30\x1d\x59\xf1\xce\xaa\x64\x4e\xa7\x4d\x35\xfb\x5c\xa5\x3e\xd2\xe2\x70\x6e\xba\x69\xd2\x40\x37\x07\xef\x94\xc6\xcc\xc4\x39\xe6\x24\x4e\x71\x18\xb3\x87\x2b\xa1\xd4\x46\x4d\xca\xe2\x25\xcf\x75\xc2\xf3\x25\x5b\xcd\x3a\x85\xa7\x2a\x39\x34\x0d\x56\x92\x2c\x49\x4e\x82\x84\x67\x21\x57\x2a\x74\x39\x38\x74\xe3\xd1\xf3\xe0\x69\x30\x8b\x48\x46\xbf\xbc\x0c\x28\xc6\x1d\x01\xa8\xb8\x59\x81\xcf\xe0\x24\xf6\xde\xb4\x2b\xa6\xd7\x45\x6c\xa7\x64\x79\x5c\x24\x37\xa8\x9b\x0f\x4e\x00\x15\x52\xbe\xcd\x53\x4e\x68\xb8\xb9\x08\x66\xc1\xb4\xc6\x88\xec\xd7\xc8\xe6\xbc\x93\x82\x8d\x25\x1a\x92\xef\xa7\x42\xe9\x2d\xd1\xc9\xda\x7c\xc1\x94\x28\xcd\x12\x85\xa6\xd6\x45\x55\xda\xee\x93\x78\x66\x25\xee\xc7\xf7\x2d\x30\x28\x73\x76\x29\x8a\x26\x32\x58\xfd\xd2\x6d\x1e\x6e\x28\x93\x10\x72\xa1\x07\x18\x75\xf0\x35\x91\xe0\xff\xf2\x66\xb3\x84\x3b\xce\x0b\xfe\xcb\x63\xd3\x80\xef\x2b\x2d\x99\xf0\x13\x9e\x09\x9e\x63\xae\xd5\x55\xb7\xca\x35\x2e\x4b\x09\x66\x3c\xf7\x25\x1a\x45\x9c\x72\x6c\xe7\x36\xbe\xab\x3a\x1d\x6c\x94\x26\x59\x74\x90\x40\x69\x22\xf5\x29\xc6\x95\xd9\x07\x58\x56\xe0\x2e\xb3\x6e\x70\x88\x9d\xe4\x2a\xe1\x02\x03\xc6\xeb\xc8\xa8\x07\xa3\x69\x30\xff\x2a\xb8\x18\xf4\xc1\x6e\x74\x06\xe3\x49\x0f\x53\x40\x45\x59\xe9\x6a\x64\x5d\x17\x92\xbf\xd9\x9d\x57\xd5\x2d\x69\x59\xd3\xbb\x85\x75\xff\xef\x78\x99\xed\xc3\x2d\xa5\xea\xee\x1e\xf7\x0b\x70\xef\x1c\x7d\xe5\x78\xd6\x2a\xc7\x44\x29\x9e\x30\xa2\x31\xaa\x5b\x83\x88\x50\x2a\x51\x99\x35\x6b\x59\xe0\x59\xc5\xd8\xca\xdb\xda\x2f\xb6\xea\xfe\x60\xc9\xff\xad\x95\xea\x0f\xd7\xf4\x7d\x0a\x4d\xc2\xfd\xef\x20\xdf\xbd\xed\xb8\xf3\xee\x63\xc5\xf2\x37\xef\x65\x93\x72\x2f\xc5\xa4\x4f\x3c\x99\x59\x0b\x1b\xfd\x5a\x70\xa8\x98\x46\xe5\x97\x14\x34\x74\xce\xd9\x21\x4a\x73\xf0\x97\xea\x90\x8a\x6c\x08\x4b\x0d\x61\xeb\x64\x63\x98\x77\x83\x73\x3c\x57\x93\x2c\x72\x65\xc9\x74\x27\x37\x48\x23\xc9\x53\x93\xba\xd1\x1d\xdb\x1e\xa4\xc5\xfa\x68\xb4\x93\x0a\x7f\xff\xfb\x0a\x90\x48\x34\x39\xd0\x30\x6a\x27\xc7\xad\xaa\xa7\x72\xb9\xcb\x43\x15\x90\x8c\xfc\xc2\x73\xb2\x55\xa6\xe1\xf1\x0e\x25\xdc\xef\x0a\x28\x37\x7b\x72\x2b\xde\x79\x65\xa5\xa1\xab\xe2\xb7\x64\xd9\xda\x46\xb9\x55\x0e\x90\x1b\xba\x7d\x99\x9a\xb3\xf0\xea\xcc\xb8\x1c\xa8\x76\x5e\x5c\x98\xb4\x54\x9d\xb3\x37\x67\xcf\xad\x94\x80\x29\x66\x98\xeb\x47\x9a\xa7\x4c\xe9\x47\x94\x68\x12\xec\x1f\x54\x07\xd5\x31\x75\xc0\xa8\x7a\xfc\x04\xa6\x8f\x6b\xb3\x02\xf4\x97\x93\x9e\x4a\xe2\x04\x2f\x6b\xc9\x75\xad\x81\xaa\x56\x60\xac\x2a\x69\x07\xaa\x04\xaa\xa8\x85\xd4\x5b\x22\x0c\xdc\x79\x61\x53\xf4\x06\x53\x7e\x8b\xdb\x40\xb2\xf7\x56\xe2\xc2\x7b\x7c\xac\xfe\x1c\xe1\xe1\x2a\xcf\xc5\xb4\x5b\x2e\x9c\x55\xcb\x0d\x4a\x9d\xa9\x0f\xcf\x99\xdb\x7e\xee\x1a\x85\x72\xab\x9f\x24\xa8\x54\x24\x78\xca\x12\x86\x46\xdf\x7f\xfa\xd3\xcb\x1f\x7f\xf8\xf6\x6f\x7f\x9d\x40\xad\x0a\xef\x7f\x4a\x4f\xf0\x16\xe0\x5d\x4c\x67\x17\xfe\x6c\xea\xcf\xbe\x6a\xe2\xfd\xef\x9a\x68\x6b\x78\x6f\x51\xbb\x82\xf9\x7b\x3b\xd9\x6f\x3f\xbc\x17\xb6\xb2\x19\x36\xa8\x16\x7f\xa8\x19\xd4\xf0\x57\x92\xe5\x09\x13\x24\x35\x28\x3d\xf0\xbf\x2c\x97\x98\x98\x59\xbc\x17\x69\xca\xb7\x87\x08\xff\xe9\x62\xce\xa0\x10\x99\x2f\xc8\x56\x2d\x50\x2d\x1e\xbc\xad\x5d\xb1\x7c\xf8\x12\xb8\x27\x2a\x81\x0d\x87\x36\xbc\xf3\xf0\xa5\x46\x24\x89\x4d\x0f\x11\xa3\xb7\x8b\x32\xd4\xc2\xfe\xc0\x0a\xff\xe0\xb5\xa4\xba\x75\x9f\xaf\x5d\x07\xe8\x74\x6b\xbc\x15\x05\xe6\x54\x45\x36\xe2\x9a\x9e\x69\x20\x93\x05\xa8\xea\xe3\x8b\x32\x4f\x0d\xe4\x2f\x93\x79\x7a\x92\xa3\x69\x07\x3c\xf0\xd4\xbc\xfc\x60\x2c\x53\x66\x8a\x81\x04\xe1\x10\x3b\xb3\x9d\xe8\x1c\x7b\xd3\xb2\xf3\x30\xfb\x80\xc9\x53\xf3\xfa\x41\x93\x6d\x50\x5c\xe3\x57\x49\x18\x94\xd3\x9a\xb8\x36\x62\xbc\xe3\xec\x6a\x1e\xb9\xfd\x8b\x99\xb8\xfa\x68\xe6\x76\xfb\x96\xfe\xb5\x07\x35\x6e\x53\x36\x46\x36\xce\xa3\xd3\x77\x7b\x0a\x1b\x87\x4b\x2e\x13\x8c\x28\x2a\x2d\xf9\xae\xca\x37\xbd\xfa\x34\x0a\x2a\xe3\x75\x57\x1b\xb4\xfa\x3a\xd2\xac\x0e\xfd\x7d\x18\xc1\x34\x92\x96\xbb\xcd\x24\x7f\xf9\xf1\xdb\x89\x91\xe9\x48\x02\xe9\x4d\x1e\xed\xc4\x71\x34\xe8\x9b\x8c\xf2\xba\x9b\x0a\xd4\x7c\xf1\x1d\x53\xfa\xcf\xfb\x3b\xd8\x7e\xf0\xf7\x45\xaa\xd9\x2b\x22\xf5\x7f\x0b\xd3\x23\xa9\x5e\xf4\xff\xc0\x14\x35\x1e\xe1\xf7\x57\x74\xec\xbe\xe3\x89\x7d\x96\xd3\x4e\x04\xd7\x7b\x62\xf7\xe5\x29\x35\x5f\x2c\x16\x0f\xde\xee\x79\x6e\xed\x8b\x65\xa9\xbb\xad\x38\xde\x3e\xe9\xd3\xd4\x51\x65\xbc\x88\xb9\x2c\x17\x2a\xea\x85\x0e\xaa\xa5\x83\x67\x54\x73\x4c\x29\x3f\xc6\x3f\x19\x13\x0d\x28\x65\x0c\xf4\x45\x92\xf6\x22\xbc\x2a\x8e\x91\xd7\x50\x43\x3e\xa8\xec\xa3\x0e\x74\xae\x25\x9a\x34\x7f\x6b\xf3\xf2\xed\xc4\x38\xfb\x41\xc4\x4a\xaa\x22\x17\x82\x1e\x78\x34\x6e\xbe\xf4\x36\xa5\xa7\x8e\xcc\x5d\x73\x4a\xe3\xe3\xe7\xe9\x55\xd0\x97\x55\x6c\xc9\xca\x20\xef\xcd\x08\x34\x36\xeb\x30\xe5\x2f\x26\x0a\xdb\xed\x63\x3f\x41\x89\x9f\x11\x3b\x52\x6f\x47\x1b\xc1\x69\x5c\x8f\x36\x78\x82\x28\xb5\xe5\x92\xee\xe3\x55\xa3\x13\x00\x75\xc3\x44\xb4\x64\x39\x49\x23\x95\x13\xa1\xd6\x5c\x37\x4d\x17\x11\x22\xdd\x45\x2c\xb3\xcf\xf1\x34\xa6\x3b\xcb\xc4\x01\xd1\xec\x1a\xb0\x4f\x85\x6d\x25\x95\x58\x35\x7a\xdd\xeb\xee\xa3\xef\x03\x5f\xf7\x33\xb9\x3e\xfe\x24\xa2\xa7\x5b\xa5\x71\xd5\xa8\x1e\x73\x8f\xf6\x79\x53\x77\x68\x68\x0f\x33\xda\x6f\xbe\x19\x70\x9b\xd2\x5d\xda\x6e\xd2\xc3\x77\xc0\x6f\x7a\xae\x5f\xf4\xf9\x5d\x8b\x51\x67\xc5\x41\x13\x0e\xf5\xa9\x50\x23\x5f\x4a\x94\xea\x5d\xe2\xde\x2a\x0c\xd6\x80\x17\x8c\x71\x87\x3e\xd7\x6a\xd1\x55\x0e\x58\x68\x1e\x65\x2c\xe7\xb2\xf2\x8d\xa8\x10\x2b\x49\x68\x79\x4b\x66\x49\x52\x65\xd0\x04\xca\x25\x97\x99\x9d\x81\xe5\x8a\xad\xd6\xba\xbd\x85\xa8\x9d\xcc\x0c\x44\x7d\xc8\xc7\xfd\x03\x73\x2a\x38\xcb\x75\xcb\x3f\xaa\xa1\x11\xfe\xd1\xa3\xbb\x91\xde\x71\xcc\xa8\xa3\x6c\xda\x95\xb6\xcd\xe9\x80\x41\x2d\x43\x70\x10\x04\xaf\x5b\xee\x76\x1d\x6c\x25\xd3\x28\xe1\x9b\x7e\xf7\xdc\x4a\x0f\x16\xfd\x20\x49\x7b\x1c\xb7\x50\x9a\x67\x8d\x84\xed\x33\xd7\x2b\xf0\x5e\xfc\xf0\xbf\x9e\x09\x7b\xa5\x89\x66\x49\x94\x61\x16\xa3\xac\xc3\xfd\x1c\xe9\x7b\xb3\x41\x2b\x03\x98\xaa\xab\x51\xe9\x88\xac\xca\x8b\x5f\x77\xba\x1b\x65\x68\x46\xdf\x8e\xba\xef\xe7\xc5\xbd\x69\xe9\x0e\xc7\xda\x56\xfa\x13\x97\xa2\xba\x74\x63\xae\x48\x8d\x98\xab\xba\x32\x55\x9f\x57\x0c\x12\x56\x0a\xaf\x31\xc7\x1d\x9b\xdf\xb5\x74\x58\xf9\xac\xb3\xfc\x06\xcf\xc2\x3f\x85\x13\xe9\x0f\x70\x7e\x7c\xbf\xb7\x57\xf6\x1d\xae\xbc\x91\x79\x58\x4d\x46\xde\xe3\x68\x07\xe8\x91\x7b\x9b\xd5\x9c\x7e\x39\xa7\x3d\x0c\x51\x89\x64\xa2\xba\x00\xf7\x42\x88\xfa\x30\x10\x2c\x92\xb5\x49\x95\x14\xab\x8a\x02\x3d\x13\xd8\x3c\xcd\xf2\x95\x8d\x3a\x17\x15\x92\x67\x91\x51\xaf\x95\xea\xe2\xa2\xcc\x7a\xbc\x1a\x6a\x0d\x0a\xc9\x35\x4f\x78\xea\xe4\xd7\x89\x28\x75\x97\x30\x2a\x4b\x27\xb6\x81\xea\x4d\x03\xfb\x2f\x9c\x7a\xd5\xb9\xce\xb1\x19\x9f\x4d\xbf\x7c\xda\x33\x67\x3d\x7c\xff\xb3\x5a\xe6\x5f\x75\xe6\x6c\x0d\x36\x33\xb6\xe7\xfb\x02\xbe\x27\xbb\x18\x41\xa2\xd2\x92\x25\x1a\x78\x9e\xee\x2c\x57\x78\x55\xbb\x2b\xb8\x07\xc8\xdf\x38\x92\x3f\x17\x1a\xd6\x24\xa7\x3b\x28\x83\x4f\x93\x1b\x13\x42\xee\xe2\xb3\x82\x2d\xd3\x6b\x5e\x68\xc8\x48\x5e\x90\x34\xdd\x81\x52\x6b\xdf\x60\xb0\x5c\x73\xd0\x6b\x74\x0c\x83\x77\x56\x74\xa9\xbe\xe7\xb3\xe9\xf4\x40\xd9\x1d\x50\x5b\xe1\x5d\xa5\xef\xc7\xc3\x50\x5e\xde\xbb\x57\x54\x89\x86\xc3\x2e\x70\x28\x52\x35\xd6\x31\xbe\x3f\x1b\x67\xfb\x51\x71\xec\xae\xe8\xfe\xba\xe1\xec\xbb\x49\x47\x47\x75\x89\x7f\x1f\xc1\x5d\xc5\xd5\x57\x97\x03\x1e\x50\x83\x7a\x3c\xa0\xa0\x77\xf2\x80\xfa\x8e\xf4\x58\xc7\x3c\x53\xac\x3b\x3a\xe6\x39\x62\x1d\x26\xa7\x0e\xe8\xc3\x68\xeb\x1c\xb1\xde\x55\x5b\xbf\x72\x08\x9f\x8a\x61\x1a\xb7\x63\xf7\x4e\x51\x3b\xbc\x6d\xef\x56\xdf\x11\xd6\x98\xcf\xa7\x5f\x0e\x58\xa3\x06\xdd\xbb\x35\x46\xc8\xf5\xf4\x72\x7e\x58\xcd\x3b\xa0\x7b\x97\x6b\x44\xea\x6d\xf6\x6c\x63\x52\xa8\xdd\xad\x9d\xec\x89\xbe\xab\xf2\xa3\xc5\x3f\xbf\x3d\xaa\xdf\x0d\x72\x32\xb5\x51\x4a\xc8\xa9\x15\x46\xb2\xb0\x8f\xd6\x9d\xe0\x6a\xed\xb6\xa7\x07\x1b\xba\x2b\xf0\x9c\x05\xcd\xb4\x5d\xf3\xd5\x7d\x57\xd7\x78\x35\xa0\x6b\xba\xb6\xf1\xda\xd1\x55\xc1\xba\x31\x76\xb0\xcd\x72\x3b\xc5\x81\x4d\xd6\xdd\xd6\x4d\x04\x3b\x7f\xdd\x97\x53\xdb\x8a\xf4\xad\xdc\x81\x3e\xea\xb5\x97\x69\xf2\xc8\xf2\xf1\xe8\xea\x87\x96\x3e\xb8\xee\x32\xa5\x7e\xf0\x65\xbb\xae\xcf\xd7\xdc\x6f\x5d\x26\x3e\x7e\xf4\x36\x32\x69\xf7\x9c\x86\x8c\xf3\xa5\xd3\x2e\x75\xda\xb3\x0e\x1c\xec\x50\x8b\x35\xca\x31\x65\x56\xaf\x3d\x1d\x9e\x6f\xf4\x13\xee\x75\xd1\x77\x33\xc5\xfe\xa6\xf9\x23\x31\x81\xdb\x60\x1c\x31\x81\xc3\xf8\x44\x4d\xd0\xbc\xe1\x72\xdf\x6d\x49\x15\x59\xdd\x2a\x38\xd2\x27\x6a\xf2\xaa\x16\x1d\xfa\xc2\xd9\x4e\xf0\x89\x14\xb1\xb3\x62\xa9\xd2\xdb\xe9\x6c\xf6\x1e\xd5\xf7\x7c\xfa\x7c\xa8\x20\x38\xd0\xa7\xa0\x42\x77\xbf\xfe\x03\xe8\x6f\x3e\xdc\x4b\xcc\x7f\xd5\x5e\xe2\xdd\x5c\xb0\xba\x9a\xff\x01\x34\x78\x39\xbd\x1c\xee\xc6\x2e\x3f\x15\x0d\xb6\x9b\xb2\xfb\x55\xdf\xc7\xde\xcd\xdd\xb5\x88\xb9\xeb\xa3\xa3\x77\x68\x0e\xff\xf4\x1e\xed\xef\x87\x9b\x32\x47\x5b\x3f\xf7\x1a\xb5\xdf\xbe\xbc\x9c\x0f\x6c\x6b\x2b\xc8\x3d\xee\x6a\x9f\x9c\x54\xe9\x75\xf3\xec\xf0\xc8\xcd\xc3\x3d\x4f\xba\x9d\x4c\xbe\x80\x7f\x20\xe4\x88\x14\x08\x28\x14\x44\x12\x8d\xdd\x6d\xab\x71\x61\xd0\x1c\x84\xc4\x8d\xd9\xd5\x26\xbb\x24\x65\x89\xbb\x1b\x89\x79\xb2\x83\x18\xf5\x16\x31\x9f\x7c\x61\xcf\x8a\x89\x10\x8e\x92\xe4\x14\x9c\x90\xe5\x48\x30\xae\x7b\x14\xc2\xb4\xef\xf5\x9b\x4d\x1f\x49\xe7\x78\xf1\xf4\x54\xe7\xe8\x30\xee\xbd\x73\xdc\x8f\x9d\xbb\xb6\x8f\xb5\x13\x8d\x88\xba\xf2\x4d\xa8\xbb\x9c\x45\xcf\xee\x76\x16\x6d\x27\x38\x1d\xa4\xaf\x0c\xda\x7b\x7b\xbc\xf4\xac\xef\x9c\xf0\x59\xef\x41\xe1\xe8\x07\x3d\x1f\xe0\x89\xd6\xc7\xfc\xa4\xe5\x43\x3f\x6a\x69\x5d\xd3\xf8\x89\xc7\xe7\xbd\xbf\xf1\x13\x8f\xdd\x3b\x88\xff\x0e\xbf\x62\xd3\xa8\xe1\x1e\x7f\xcc\xa6\x8f\xe9\x3d\xfd\xa6\xcd\xe7\xeb\x14\x9f\x7f\xab\xe6\xf8\xbd\x8e\xcf\xbf\x2c\xf3\xf9\x97\x65\x0e\xee\xe6\x0c\xdd\xa3\x31\xc1\x16\x55\x5f\xed\x4b\x19\x11\x2d\x32\xb1\x7f\x48\xf6\xe8\x48\x9b\xe3\xae\x75\xd7\x97\xcd\x2d\x79\x54\x48\x06\xbf\xbb\x02\xcf\x7b\xbc\xf7\x7a\x45\x3b\x7a\x52\x9e\x90\x74\x2f\x78\x12\x9e\x65\xa6\x37\xbe\xb2\xb5\x0a\x7c\xbf\xfa\x51\xba\xb2\x0a\xb5\x7e\x94\xee\x16\xd4\x1c\x12\xe1\x00\x87\x73\x1b\xf8\x22\x0c\x4f\xdc\x83\x07\xdf\x97\x26\xd3\x2a\xb6\x71\x11\x7e\x3b\xf9\xff\x00\x00\x00\xff\xff\x15\x89\xe6\x97\xac\x4f\x00\x00")

func clusterTfBytes() ([]byte, error) {
	return bindataRead(
		_clusterTf,
		"cluster.tf",
	)
}

func clusterTf() (*asset, error) {
	bytes, err := clusterTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.tf", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0x98, 0xae, 0xb5, 0x7b, 0xc5, 0xb3, 0xa9, 0x39, 0x50, 0x4e, 0x29, 0x2b, 0x31, 0xcf, 0xcc, 0x92, 0x75, 0xfe, 0x2a, 0xd9, 0x9b, 0x56, 0x2c, 0x52, 0x21, 0x16, 0x1, 0xf6, 0x37, 0x19, 0x27}}
	return a, nil
}

var _dashboardYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8c\xb1\x6e\x02\x41\x0c\x44\xfb\xfd\x8a\xe9\xa8\xa2\x23\x4a\xb7\x75\x1a\xea\x88\xf4\x3e\xec\x03\x4b\x66\x77\x65\x9b\x8b\xf2\xf7\xd1\x52\x44\xa2\x9d\xf7\xe6\xd1\xd0\x6f\xf1\xd0\xde\x2a\xde\x4b\x19\xde\x77\x65\xf1\xa8\xe5\x0d\x8d\xee\x52\x71\xb8\x4b\xba\x5e\xe2\x50\x80\xee\xd7\x13\x4f\x11\xd8\xba\xb1\xf8\x2b\xce\xdf\x21\x15\x9b\x9a\x14\x80\x35\x68\x35\xf9\x14\x93\x7c\xe6\x37\xb2\x98\x40\x58\x73\x92\x8a\xf4\xc7\x1c\x1e\x83\x29\xe5\xd4\x52\x7c\x27\xfb\x92\x4b\x6f\x1c\x15\x1f\xc7\x63\x01\xc8\xac\xff\x9c\xf5\xfc\x74\xe2\xff\xd3\xc7\x8c\x46\x2d\x00\x30\x28\x6f\x15\xcb\x4e\xbe\x98\xae\xcb\xd5\x69\xa3\x46\x0b\x53\xdc\xd6\x4e\xce\x51\xfe\x02\x00\x00\xff\xff\x4e\xda\x5e\xba\xe7\x00\x00\x00")

func dashboardYamlBytes() ([]byte, error) {
	return bindataRead(
		_dashboardYaml,
		"dashboard.yaml",
	)
}

func dashboardYaml() (*asset, error) {
	bytes, err := dashboardYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dashboard.yaml", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0xd3, 0xf5, 0x60, 0x9d, 0xb1, 0xc3, 0x4f, 0x3f, 0x8, 0x37, 0x26, 0x8f, 0xe5, 0x97, 0x54, 0xbb, 0xa4, 0x6b, 0x3d, 0xee, 0xdf, 0x22, 0x37, 0xc, 0xdd, 0xb7, 0x38, 0xb7, 0xdb, 0x2a, 0x9f}}
	return a, nil
}

var _dashboard_dataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9d\x6d\x6f\xdb\xb6\xf6\xc0\xdf\xe7\x53\x10\xc2\xff\x7f\x91\x0e\x71\x16\x3b\x71\xb2\x04\xd8\x8b\xd4\x6b\xbb\x02\xcd\x96\x9b\x87\xdd\xe1\xb6\x85\x40\x4b\xc7\x32\x11\x49\x54\x49\xca\x89\xd7\x65\x9f\xfd\x82\x94\x64\x53\x0f\xb6\x65\xc5\xae\x9d\x86\x7b\xb1\x46\x47\xa4\xc4\x73\x78\x78\xf8\xcb\x21\xc5\x7c\xdd\x41\xc8\xc2\x61\x48\x05\x16\x84\x86\xdc\x3a\x43\x52\x84\x90\xe5\x13\x2e\xac\x33\xf4\x51\x5d\xa1\x54\xaa\xee\xf4\x63\xe2\x8b\xf7\xa1\x75\x86\xda\x7b\x53\xa9\x8b\x05\xe6\x34\x66\x0e\x58\x67\xc8\x6a\xb5\xd0\x3b\x86\x07\x38\xc4\xa8\xd5\xb2\xb4\x62\x10\xe2\xbe\x2f\x8b\x08\x16\x83\x26\x1f\x12\xb7\x42\x4a\x1c\x1a\xf6\xa8\x4f\x99\x7c\x26\xf3\xfa\x78\xf7\x60\x0f\x75\xda\xed\x3d\xd4\xe9\x76\xf7\x50\xfb\x95\xfe\xe8\x10\x07\xea\xdd\xe7\x53\x75\xd0\xbf\xd0\xb9\x0f\x4c\x70\xbd\x9c\x18\x47\xaa\x9c\x8b\xf9\xb0\x4f\x31\x73\xad\xf4\xde\xa3\xfa\xf7\xf3\x0e\x42\x8f\xb2\xb8\x05\x2e\x11\x85\xd6\x5a\x5e\x08\xe2\xbd\x6b\x9d\xa1\x4e\xf7\xa8\x93\x48\x18\x8e\x86\x37\x94\xfa\x82\x44\x99\x4d\x2c\xa2\x8a\x24\x3f\x0a\x60\xaa\x35\xf2\x66\xf7\xf4\xf0\xe4\xa7\xd3\x93\xee\xc9\x61\xf7\x50\xdd\xf5\x49\x78\x27\xad\xfe\xf1\xb3\xba\x8c\x70\x08\x3e\x9f\xd8\x3d\xb3\xba\x85\x7d\x82\xb9\xb2\x84\xea\xa2\xc7\x4c\x1d\xab\x8f\x95\x64\x80\x7d\x3e\x31\x9c\xd2\xec\x03\x84\x9e\x18\xca\x77\x1e\xe4\xe4\x50\x55\x5c\xef\x3a\x9f\x62\x57\x00\x17\xad\x54\x34\x29\x56\x61\x8e\x44\xce\x98\xea\xa0\xfc\x43\x07\xc4\xf7\x75\x17\x51\x82\x77\x0c\xbb\x04\x42\xe9\x58\xd3\x56\x79\x8c\xb8\x97\x74\xea\x7a\x89\x3f\x58\x67\xe8\x54\xeb\xb4\x7b\xf9\xac\x8e\x26\x78\xd0\x9f\x81\x90\x35\x96\xd7\x59\x47\x4e\x9e\x3d\x24\xae\x0b\xe1\x35\x30\x52\xa1\xb7\xea\xa4\x93\xc9\xa5\x0f\x1e\x84\x6e\xbe\x19\x78\xe4\x15\xab\x21\x64\x39\x31\x63\x89\x16\xc5\x3b\x01\x7e\xa8\x92\x92\xb0\x42\xca\x87\xf4\xbe\xec\xf2\x82\x0a\xec\x57\x94\x1e\x61\x3f\x9e\xea\x50\x52\xd4\x27\xa1\xba\x9b\xeb\x19\x29\xbc\x27\x6e\xe2\x06\xba\x54\x73\xb9\x64\xe8\xc4\xbe\x7f\x49\x49\x28\x2e\xa8\x1a\x86\x96\x43\xc3\x10\x1c\x01\xee\xb4\xfb\x69\x94\x8f\x10\x13\xd7\xf9\x30\x79\x5e\xa9\x55\x11\x30\x07\x42\x81\x3d\x28\x19\x3f\x92\xaf\x93\xee\x10\xcb\xba\xdd\xbc\xbc\xdc\x57\x0c\x42\x17\x18\xa8\x40\x30\xf0\xa9\x98\xb6\x8b\xab\xce\xfd\x7d\x04\x8c\x11\x17\x0a\x8a\xf1\x08\x3b\x50\x35\x14\xb8\xc0\xce\x5d\xe9\x2d\x5c\x40\x14\x81\xfb\x81\x84\xe5\x06\x0b\xcc\x3c\x10\x5c\x8b\x89\x7a\x54\x94\xe3\xe0\x21\x4a\xe2\x14\x16\xb0\x1b\x60\x21\x80\x05\x94\x0b\x3b\x92\xff\x53\xdd\xfa\x95\x84\x5c\xe0\xd0\x81\x9f\xff\xf9\x64\xfd\x1f\x07\x36\x02\xf6\xc9\x7a\xfc\xd8\x0e\x3e\xeb\x91\x4c\x0e\x16\xca\x02\x2c\x1d\xcc\x12\x24\x00\x3b\xd1\x31\x5f\x84\x84\x02\xd8\x08\xfb\x6f\xb1\x23\xd4\xf8\x6b\xe7\x6e\x27\xde\xfc\x76\xf2\x9c\xaf\x93\x97\x3f\x3e\xe6\x1f\x14\x80\x60\xc4\x91\x65\x2a\x1b\x9d\x2f\xcc\x60\xa0\xc2\x9f\x75\x9e\x97\x4b\xcb\xc9\x7e\x9c\xc8\x1e\xf7\xe6\x5b\x89\xc7\xc1\x6e\x33\x4b\xad\xdd\x54\x37\x65\xb5\x9b\xd9\xe8\xf5\x22\x1b\xa5\x3f\x4d\xfd\x55\x0c\x19\xf0\x21\xf5\xdd\x82\x1f\x4b\xd5\xde\x32\x1a\x58\x67\x48\x8e\xd5\x9c\xfc\x0a\xbc\x74\x60\x16\x2a\x5c\x0f\xc9\x40\x94\x6b\x08\x15\xc2\xad\x4b\xca\x05\x47\x11\x30\x74\x0d\x0e\x0d\xb5\x91\x2e\x26\x93\x99\x36\xd2\x03\x7e\x05\x9c\xfa\x71\x3a\x93\x95\x83\x19\x66\xe0\x96\xc3\x19\xa7\x4c\x14\x22\xb5\x8a\x64\x76\x36\x0b\x93\xd0\x25\x23\xe2\xc6\xd8\xb7\x4a\xe1\x23\x2b\xa3\xa6\xd8\x69\xfb\x1e\xf0\x03\x29\xc4\xa1\x7e\xec\xdc\x25\x83\x53\x57\x56\x36\x3b\x0d\x68\xd2\x1e\x15\xb0\x50\x28\x5d\x1d\x92\x27\xa1\xb7\x22\xc2\x8d\xf1\x03\xcc\x89\x09\x53\xe7\xe4\x43\x69\x89\xbc\xdf\xe1\x3e\xc8\x50\x6f\xf5\x68\x1c\x16\xef\x51\xef\x35\xe6\x50\xf2\xd5\x64\x82\xc9\x37\x7b\x32\xc3\x94\xc4\x9a\x3e\x0b\x07\x66\xad\xa6\x96\xde\xb0\xc6\x76\x96\x06\xc7\xb8\xdc\xef\xd8\x27\x5e\x95\x3b\x2a\xf9\x07\x18\x4d\x1a\x9d\x43\xbc\xd4\x04\x86\xae\xb2\xeb\x4a\xba\xca\x09\x9a\xe2\x95\x66\x9f\xd9\x7c\x55\x18\x6f\x8b\xf0\xaa\x50\x3c\xf1\xa9\x62\xdc\x69\x06\x57\x9a\x07\x1a\xb6\x7a\x06\x6c\x35\x14\x22\xb2\x19\x7c\x89\x81\x0b\xbe\x0d\x90\x85\xb2\xb7\xa3\x5a\x98\xa5\xda\xaf\x86\x38\xff\xe6\xb4\xb5\xa4\xed\xb6\x06\xbb\xea\xda\x6c\xab\xe9\xeb\x2a\xb5\xbb\x01\x30\x03\x60\xcb\x34\xd5\x00\xd8\xcb\x01\xb0\x62\x7a\xeb\xb4\x01\x7f\x1d\xd7\xc0\x2f\x93\xde\x32\x08\x56\x1f\xc1\x8a\x33\xf1\x3d\xf4\x39\x55\xc1\x7f\x2e\x43\x6c\x59\x7e\xab\xb2\xe9\x6b\x84\xaf\x86\x56\xdb\x04\x74\x3d\x0f\x80\xfa\x2d\x0e\xfa\xc0\x10\x1d\xa0\x5e\x36\x98\xd1\x2f\x30\x22\x0e\x70\xb4\xfb\x1f\xe8\x5f\x2b\xeb\x66\x37\xe5\x1b\x5e\x19\xc0\x32\x80\x65\x00\xcb\x00\x16\x42\xb3\x32\x5c\x4d\x08\xab\x6d\x08\xcb\x10\xd6\xba\x08\xcb\xed\xdb\x01\xe6\x02\x98\xed\x4c\x27\xb2\xe7\xc4\x59\x73\x14\xf8\x36\xb4\xb5\xbc\x05\xb7\x26\xd1\xb5\xbc\xed\x9e\x17\xb1\xa9\x1d\x3a\x82\xa2\x0b\xa5\x24\xfa\x05\x0b\xdc\x97\x33\xad\xc1\x34\x83\x69\x06\xd3\x0c\xa6\xa1\x19\x79\xb0\xf6\x4f\x4d\x30\xcd\x70\x9a\xe1\xb4\xd5\x72\x5a\xd5\xa2\x1a\x8e\x88\x9d\x70\x42\x1c\x24\xcb\x66\xa8\x3f\x46\xbb\x19\x69\xbc\x42\x3f\xa2\xb9\xd5\x1c\x19\x81\xab\x2a\x2e\x0d\x25\xe9\x8e\xda\x82\x7b\x2d\x4f\x2b\x78\xe4\xb5\x96\x5e\xd7\xd4\xcd\xb0\x26\xce\x1b\x12\x2e\xa8\xc7\x70\x60\x7f\x89\x71\x28\x88\x0f\xbb\x07\xfb\xa7\xa7\x7b\xf3\xed\x9b\xcc\xcf\x15\x06\xde\xf3\xa1\xc1\x12\xe7\x4c\x23\x17\xad\x18\x9d\x9e\xb6\x66\xa3\xb3\x06\x70\xdb\xc1\x6a\xe7\x97\xef\x51\xba\x44\x89\x6e\x48\x00\x68\xf7\x5a\xe1\xb1\xc9\xa1\xad\x19\xce\x66\x80\x99\x61\x32\xc3\x64\x5b\xcd\x64\x9d\x93\x06\x4c\x76\x78\x64\x98\xcc\x30\xd9\xda\x99\xcc\xed\xdb\x5c\x50\x06\x4d\xc0\x2c\x5f\xd7\xd0\x59\x26\x59\x29\x9d\xe5\x8d\x6c\x10\xad\x16\xa2\x5d\x4b\x8b\xa1\x1e\xf6\x7d\x43\x68\x86\xd0\x0c\xa1\x19\x42\xcb\x13\x5a\x69\x71\xb3\x51\xda\xec\xb0\x63\x10\xcd\x20\xda\x7a\x10\x2d\x1b\x4c\xb9\x9d\xe8\xb5\x21\x6d\x4e\x6d\x83\x69\x99\xe4\xe9\x98\x36\xc7\xcc\x06\xd4\x1a\xe6\xd2\x7a\xbe\x8c\xf3\x86\xd4\x0c\xa9\x19\x52\x4b\x6e\xbc\x68\x52\x5b\x49\x2e\xad\x7d\x68\x40\xcd\x80\xda\x4a\x41\x8d\x94\xce\x67\x60\xd4\x01\xce\x6d\x27\x8a\x6d\xae\xbe\x59\xab\xf1\xdd\xe0\x0f\xa8\x7d\x70\xb0\xb9\x5d\x69\xf5\x51\x69\x93\x8c\xd0\xbb\xbc\x45\xb7\x82\xf8\xe4\x2f\x75\x54\x10\xba\xc2\x02\xd0\xee\xff\x1b\x44\xd8\xdc\x5e\xa8\xb9\xdd\x81\x0c\x3a\x20\x83\x0e\x9b\x47\x87\x52\x92\xa7\x11\x3b\x74\x0d\x3a\x18\x74\x58\x29\x3a\x78\xd4\x0e\x20\xe0\x02\x0b\x6e\x63\xdf\xa7\x8e\xdd\x1f\x0b\xe0\x1b\xda\xb3\x7e\x2e\x5b\x30\x27\x65\x30\xcd\xbe\xcc\x68\xf7\x5a\x37\xac\xeb\xef\x54\x5d\x62\x93\x30\xe6\xb0\x5a\x8b\xad\x2a\x91\x75\x2d\x1b\xb8\x5e\x7b\x2e\xdc\xc4\xbe\x84\x3d\x87\x80\xa3\x6d\x36\xe7\xaf\x80\xa3\xf5\x5a\xb3\xb7\xcd\xd8\x7b\x01\x01\x65\x63\x74\xcb\x65\x74\x34\xa8\xbb\x4e\xd4\x55\x9e\x62\x32\x62\xb3\xda\xa9\x13\xc5\x77\xca\xb5\xb9\x21\xb8\x89\xbc\xd6\xe1\x71\x03\x36\xed\x9c\xd6\x80\xd3\x55\x1c\x20\xb6\x22\x34\x7d\xea\x09\x62\x25\x0c\x95\x82\x6f\x44\xa0\x9d\xef\x88\x40\x79\x1c\xec\x92\xd0\x61\x80\x79\x71\x11\x4b\xc6\x62\x1a\xd7\x3a\xf3\x6a\xde\xf2\xe1\x32\x87\x7f\x69\xb0\x58\x9b\x63\x56\xa3\xc1\xfc\x36\xcf\x3f\xfe\x61\x3b\x20\x21\x59\x2d\x53\x4b\x67\x52\x67\x75\x62\xd6\x05\x09\x63\xb1\x08\x19\x0c\x13\x54\xfa\xd7\x16\xcc\xb6\x86\x0a\xb6\x86\x0a\x9e\x75\xb6\xab\x11\x51\x98\x4d\xe7\x26\xdb\xb5\x5a\xd6\xf0\xa8\xed\x51\x46\x63\x21\xbb\x64\x8b\xcf\x65\xc8\xb5\x73\x8d\xc7\x2f\xd4\xb1\xc7\x66\x4f\x59\xa8\x63\x89\x67\x72\x98\xc2\x3b\x8a\xae\x8a\x8a\x98\x14\x8a\x39\x39\x61\x1b\xc8\xee\x7b\x04\xa6\xdc\x78\x74\x81\x3b\x8c\x44\xe9\x88\x9a\x26\xd2\x36\x92\x5f\x39\xea\x36\xa0\xa1\x4e\x9d\x73\x11\x66\xe6\x57\x8a\x99\x94\xda\xe7\xb3\x33\xe2\x0d\xc5\x75\x65\x16\xdd\x64\x5e\x9e\x37\x0d\x4d\xb6\x0e\x87\xd4\x85\xba\x7b\x85\xf6\x64\x94\xff\xf9\x93\x15\xf3\x9a\xd9\x97\x39\x2b\x30\xb2\x7c\x05\xaa\x57\x30\xc2\x2d\x07\x86\x6a\xed\x1d\x5a\x8a\x7f\x1a\x6b\xcf\xc7\x5c\x40\xf0\x34\xfd\x4b\x2b\x76\xea\x99\x75\xb4\x7c\xfd\x8d\xb4\x24\xae\x0f\xab\xd5\xf1\xbd\xeb\x43\x1d\x0d\x7b\xdf\x44\xc3\x7f\x3e\x59\x84\x7d\xf9\x9b\xd3\x81\x90\xff\x12\x7a\x8f\x89\x58\xad\xc2\xbf\x8b\x61\x3d\xcf\xfd\x65\x5b\x92\x78\x97\xb7\xe8\x03\xc5\x2e\xda\x6d\x07\x8b\x76\xb5\x19\x10\xad\xf4\xcc\xad\xa3\x3b\x43\xa1\x5b\x42\xa1\x1b\xc9\xbd\x35\xa2\xcd\xc3\x97\x77\x0a\x97\xc1\xca\xb5\x2f\xe8\xe9\x7f\x0c\x66\xf1\x72\x1e\x17\x58\xc4\xdc\x76\xa8\xbb\x68\x45\x0f\x7b\x10\x0a\xd4\x42\x5f\xbf\x22\xad\x12\x7a\x7c\x44\x2b\x5e\xdd\x9b\x79\x12\xd8\x0c\xcc\xd0\x5a\x23\x6f\x1c\xed\xef\xff\xdd\xdd\xdf\x6f\xac\x66\x14\x55\x29\xb9\xe5\xcb\x82\xbf\xde\xdc\x5c\xa2\x37\xaa\xe7\xcd\x92\xa0\x41\x0b\xb3\x24\xf8\x7c\xd9\xa2\x98\xc8\xea\x1e\x35\x40\x8b\xce\x74\x45\x29\x5b\x29\xc8\xa7\xe4\x5e\xc2\xdf\x1f\x34\xb0\xb1\x1a\xd8\xd8\xcd\xff\xfa\x1f\x82\xb8\xa7\xec\xce\x16\x0c\x87\x3c\x20\x42\xdf\x77\xbb\xc4\xfe\xa1\x57\x3f\xfc\x54\xbd\xa4\x55\xde\x84\xb9\xec\x62\xd7\x9f\xc9\x37\x4a\xab\xde\x83\x34\xc3\x0e\x0c\x1c\x20\x23\x58\x95\x19\x1a\xe5\xf2\x96\xb4\xd0\xd5\x32\x16\xda\x16\xc6\xf9\x2d\xb1\x37\xba\xfa\xf3\xc7\xb4\x87\x17\xad\xf1\x19\xc0\xa9\xf4\x67\x6d\x1f\x74\x34\x63\x17\xb4\xc1\x9b\x97\x88\x37\x2e\x38\x24\xc0\x7e\xd1\x63\x37\x93\x52\x69\xc6\x3d\xab\xfd\xf0\x5f\xc6\xe2\x37\x41\x24\xc6\x33\xee\xfd\x17\x18\x7d\x62\x26\x66\x0d\x6b\x7f\x26\x4b\xb3\x2d\xe0\xa4\x38\x21\x50\xdf\xf5\xd8\x17\x10\xa8\x5d\x38\x73\xbf\xbd\x42\x2d\x54\xa8\xf3\x96\xc1\xfc\xcf\xb5\x0a\x55\x5e\xc7\x83\x01\x30\xbe\x4c\x95\x1e\x76\x86\xe0\xce\xad\xb1\xa6\xf5\x46\x77\xe5\x8c\xb6\xb4\xc5\x6b\x6c\x09\x7f\x5e\x98\xb4\xc4\x67\x64\x86\x8f\x2a\x7d\xa9\xd6\x77\x62\x86\x90\x5e\x22\x21\x6d\x84\x84\x8e\x0f\x9b\x90\xd0\x49\x0d\x12\x32\xb9\x9e\x86\xc8\xe2\xc7\x1e\x09\xff\x00\xc6\xd3\xbd\x6e\xc7\xfb\xc7\xfb\x1d\xeb\x05\x20\x4d\x96\xf9\xe0\x02\x0b\xfb\xc6\x89\xec\x5e\xcc\xd8\x1b\x2e\x70\xbf\xd6\xfc\xba\x12\x70\x50\xaf\xf3\x09\x1f\xae\x81\x1f\x48\x2e\xbf\x93\x69\xf9\xe6\x41\xd8\x37\xbd\xcb\xec\xab\xab\x79\xe9\x9d\x35\xe8\x3b\xf9\xd8\x6b\x69\x0e\x59\xa0\x2c\x8f\x83\x92\xaa\x0b\x3b\xb4\xe9\x2e\x9d\x04\xa5\xb4\xbe\x5b\xcd\xb6\xa4\x27\x77\xd8\xd3\xf4\xc9\xde\xb0\xe5\x3b\x8e\x6e\x7a\x97\xfa\x1f\x1a\x34\x5c\x68\x16\x06\xbf\x13\x2e\xdc\x49\x1f\x2b\xc7\x9c\x1c\x4e\x52\xed\xf6\x41\xe2\xe1\x16\x77\x86\x10\xe0\xe9\x3c\xdd\xe9\x24\x62\x31\x4e\x86\x85\x8b\xd9\x5d\x52\x52\x60\x6f\xda\xf3\xda\xb9\xc3\xa9\xf1\x34\x49\x2b\x02\x36\xb0\x26\xaf\x15\x10\x44\x3e\x16\x24\xf4\x26\xea\x58\x3e\xe1\x42\x73\xa3\x9c\x92\xfe\x1f\xd2\x01\xcb\xde\x3a\x65\xaf\x5c\x5f\x0a\x78\x10\xe5\x05\x91\x51\xfa\x8c\x8f\x9a\x10\x21\xcb\xd2\x2e\x3f\x57\xb9\x49\xcd\xaf\x1d\x55\x2a\x70\x40\x42\x92\x6d\xe5\x57\x4e\x63\x27\x43\xa7\x72\xbb\x66\x16\x36\xf5\xd0\x40\x42\xc7\x8f\x5d\x38\xf7\xab\xc0\x6f\xf2\xad\x48\x12\x8c\xf5\x47\x05\xb1\x2f\x48\x79\xe0\xa6\x83\xbc\xa2\xc2\x14\xee\xa6\x31\x11\x21\xeb\x4b\x0c\x6c\x5c\xaf\xf5\x53\xdf\x69\xe7\xa4\x1e\x3c\x14\x8c\x6f\xf1\x3b\x12\xdd\x32\xff\x7a\x1c\x3a\x55\x19\xbb\x72\x84\x14\xd8\x53\x5d\xce\xff\x9d\xb5\xc7\xca\xdf\x2d\x35\x5c\xca\xaa\x0b\xa7\x21\x34\xd1\x4c\xbb\x11\x73\xb8\x49\x1e\x94\xcb\xfd\xed\x64\x8e\xf0\x98\xb8\x2a\x51\x16\x4c\x9d\x74\x90\xcc\x30\x56\x48\xef\x5b\xed\x6e\x76\xa6\xb6\x25\x68\x2a\xb4\x72\xf5\x22\xe2\xdc\x29\x40\x4d\x6b\xa7\x16\xb3\xb3\x85\x27\x3d\x6c\x5a\x5d\x6d\x82\xc9\xc6\xa2\xba\x38\xd4\x2f\xda\xd3\x73\xbc\xad\xae\xf6\x73\x5b\xbf\x38\x3c\xd0\xef\x68\xf3\x46\x47\xfb\xb9\xed\x26\x9e\xff\x39\xd3\x81\x04\x60\x6b\x5e\xb1\xf0\x2d\xfa\x83\x8f\xf5\x07\xeb\x6f\xe9\x1c\xe9\x17\xda\xa7\xa1\x27\xae\xde\xde\xac\x2d\x39\xf3\xfd\x45\x15\x74\x5b\x7d\x46\xef\x79\xea\xbd\x5a\xca\x66\x12\x5c\xd4\xb6\xe0\xd6\x0d\x70\x81\x2e\x81\xa9\x40\x2e\x61\xef\x82\x86\x44\x50\x26\x83\x8c\xaa\x19\xab\x5f\xf1\xac\x83\xe4\xbf\x76\x3b\x91\x8e\x26\x71\xee\x68\xe7\x71\xe7\x7f\x01\x00\x00\xff\xff\x36\xc2\x2d\x55\xce\x9c\x00\x00")

func dashboard_dataJsonBytes() ([]byte, error) {
	return bindataRead(
		_dashboard_dataJson,
		"dashboard_data.json",
	)
}

func dashboard_dataJson() (*asset, error) {
	bytes, err := dashboard_dataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dashboard_data.json", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0x10, 0x2a, 0x34, 0x55, 0xc8, 0xf9, 0x53, 0xd0, 0x3a, 0xd9, 0xed, 0x39, 0x4e, 0x6f, 0x95, 0x22, 0x8, 0x3d, 0x4a, 0xb0, 0x62, 0x7e, 0xf, 0xa, 0x1e, 0x50, 0xf9, 0x46, 0xfb, 0xf0, 0xa0}}
	return a, nil
}

var _datasourceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\xc5\x45\x8c\x87\x37\x05\x45\x87\x2e\x9a\xb3\xe4\x07\xba\x33\xd6\xb5\xcd\x42\x96\x0c\x91\x72\x9b\xbf\x2f\x9c\x00\x6d\x37\x82\x87\x38\x38\x1c\x30\xd6\x32\xe9\x8c\x49\x33\xb1\xb3\x99\xd6\x12\x64\xd3\xf7\xe7\x18\xf1\x1a\xc2\x80\xac\xe6\xa8\x13\x92\xb8\x58\xed\x6d\xa4\xc1\x2b\xb4\x18\x9b\xbf\xf4\x2d\x89\x13\x89\x1b\x4b\xd2\x32\x87\x01\x9f\x8b\xf8\x7f\x83\xec\xa2\x59\x6e\x99\xd0\x02\x5f\xf8\x10\xdc\xc4\x18\xfe\x98\x62\x38\xa3\xc8\xca\x88\x5c\x25\x39\xcd\xcf\x4f\x12\x00\xbf\x6f\x8c\xd8\x5a\x5d\xe9\x0b\xbb\x05\x40\xc6\x91\x66\x8f\xe5\xd7\x3d\x00\xb5\xcd\xd7\x74\x74\x02\xbd\xe5\x88\x7f\xc7\x91\xda\x85\x93\xf4\xec\x11\xde\xfa\x61\xda\x7f\x1f\x02\x98\xd4\x8f\xac\x1f\xfa\x61\xb5\x5c\xc4\x25\x06\x00\x70\x5d\x79\x2d\xce\xb6\x4b\x8e\x38\xbd\xd9\xe9\x3b\x00\x00\xff\xff\x50\x28\x34\xbf\x28\x01\x00\x00")

func datasourceYamlBytes() ([]byte, error) {
	return bindataRead(
		_datasourceYaml,
		"datasource.yaml",
	)
}

func datasourceYaml() (*asset, error) {
	bytes, err := datasourceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "datasource.yaml", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x82, 0x88, 0xc0, 0xa4, 0xae, 0x3, 0xd5, 0x18, 0x5f, 0xf7, 0x9a, 0xce, 0x18, 0xcf, 0x8c, 0xeb, 0x4c, 0x24, 0x3f, 0xba, 0x8b, 0xe6, 0x78, 0x8f, 0xb9, 0x5e, 0x3f, 0xa9, 0x91, 0xc7, 0x9d}}
	return a, nil
}

var _es_dashboard_dataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x6f\xdb\x36\x14\x7e\xcf\xaf\x20\xf8\x30\x74\x40\x82\x5a\xce\x52\x04\x7e\x4b\xd7\xb5\x28\x90\xa2\xdd\x32\xec\x25\x08\x0c\x5a\x3c\x96\x38\x53\xa4\x40\x1e\x39\x76\x0b\xff\xf7\x81\xd4\x8d\xba\xb4\xc9\x8c\xac\x6b\x51\x3d\x45\xfa\x78\x48\x7e\xe7\xfa\x21\xd6\xa7\x13\x42\x28\x53\x4a\x23\x43\xa1\x95\xa5\x0b\xe2\x20\x42\xa8\x14\x16\xe9\x82\xdc\xfa\x37\x52\xa1\x7e\x65\x55\x08\x89\x6f\x15\x5d\x90\xe8\xb4\x45\x39\x43\x66\x75\x61\x62\xa0\x0b\x42\xcf\xce\xc8\x1b\xc3\xd6\x4c\x31\x72\x76\x46\x03\x33\x50\x6c\x25\x9d\x09\x9a\x02\x02\x3c\x15\x7c\x04\x15\xb1\x56\xbf\x6a\xa9\x8d\x3b\xd3\x24\x2b\xf6\x6c\x76\x4a\xe6\x51\x74\x4a\xe6\x17\x17\xa7\x24\xfa\x39\x3c\x5a\xb1\xcc\xdf\x7d\xd5\xba\x43\x7e\x22\x57\x12\x0c\xda\xd0\x0e\xf7\xb9\xb7\xe3\xcc\xa6\x2b\xcd\x0c\xa7\xd5\xda\xc1\xff\xbd\x3b\x21\xe4\xe0\xcc\x29\x70\x81\x3d\xb6\x34\x51\x80\x6f\x39\x5d\x10\x55\x48\x59\x22\x86\xe5\xe9\x9f\x5a\x4b\x14\x39\x5d\x90\x99\x07\x85\x33\x39\xf7\x8f\x52\xa8\x8d\x8b\xeb\xed\x9d\x7f\xcd\x99\x02\x69\x9b\xc8\xd6\x71\xa5\x4c\x0a\x66\xbd\xaf\x3e\x09\x87\x9a\x30\x5d\x31\x8f\xac\x99\xb4\x4d\x68\x3c\xf7\x6b\x50\x09\xa6\x2e\x0d\xb3\x0e\x0e\x63\xe6\x41\x72\x6a\xe6\x7e\x65\x2d\xa4\x0c\x33\xe9\x81\x37\x86\x71\x01\x0a\x6b\x77\xfc\x42\x62\x04\xff\xa0\xdb\x0a\x29\xd3\x46\x17\xe4\x32\x88\xed\xbd\x3b\x6b\x1e\x00\xbb\xf0\x0c\x42\xe8\xde\xbd\xd7\xf1\x6e\xce\x4e\x05\xe7\xa0\x6e\xc0\x88\x11\xf2\x3e\x96\xcd\x25\x54\x42\x02\x8a\x77\x69\xb0\x6d\xd2\xdf\x46\x08\x8d\x0b\x63\x4a\x2f\xfa\x2b\x19\xdb\x8d\xa1\x42\x8d\xa0\x36\xd5\xf7\xc3\xca\x44\x8d\x4c\x8e\x58\x6f\x99\x2c\x5a\x1f\x06\x8e\x4a\xa1\xfc\x6a\x78\x9a\x07\xef\x05\x2f\x73\xd9\xa0\x2e\x4d\x1f\xb4\x50\xf8\x4e\xfb\xd6\xf0\x40\x53\xc7\x54\xe7\xdd\x86\x6d\xf2\x7c\xdd\xd4\xdb\xe0\xf6\x1c\x4c\x0c\x0a\x59\x02\x83\x20\xe7\xee\x26\x97\xf6\xc2\xed\x9d\x77\xf1\x61\x4e\x0c\x28\x0e\x06\x7c\x5f\xae\xa5\xc6\x96\x97\xf5\x49\x7c\xbf\x05\x63\x04\x87\xb6\xf0\xcb\xc5\x9c\xc5\x30\x56\xb7\x16\x59\xbc\x19\xdc\x62\x11\xf2\x1c\xf8\xb5\x50\x43\xc2\xc8\x4c\x02\x68\x83\x11\x15\x0e\x29\xd7\xbd\xbb\xbc\x1c\x1b\x0c\xe1\x19\x48\x66\x51\xc4\x16\x98\x89\xd3\xa5\x50\x5c\xc4\x60\x97\xd5\xeb\x1a\x30\x4e\x97\x3e\xa3\xb7\x51\x76\x17\x0e\x95\xa6\xde\x5e\x6b\x93\x31\xac\xcf\xeb\x5a\x18\x58\xfb\x91\x40\xaf\x68\x03\x1f\xaa\xa7\xd6\x77\x4c\x0d\xd8\x54\x4b\xde\x8b\x09\x8a\x0c\x5e\x1b\x9d\xf5\x3b\xd3\xe1\x7f\x40\x52\x25\xb9\xb7\xe1\x26\x15\x6b\x1c\xee\x40\x3f\xac\xe8\xef\x05\x98\x3d\xe9\x10\xa5\xd8\x4c\xa8\x4f\x61\x6d\x33\x03\x7c\x58\xdd\x56\x1b\xec\x35\xae\x2f\xec\x65\x3d\x3b\x5d\x04\xb7\x82\x17\x4c\xd2\x41\x95\xd5\x36\x7e\x30\xb6\x04\x76\x6c\x27\x7a\xe5\xba\x2a\xe2\x4d\x99\xc3\xd0\x0f\xd7\x89\x55\xc9\x3b\x57\x47\x46\x7c\xcf\x7a\xbc\x43\x9b\x4e\x1c\x69\x84\x3d\xdb\xc1\x17\x4a\x67\xdd\x24\x5b\x69\xd5\x4b\xb6\x64\x2b\x90\x75\x90\x05\xd8\xe7\xb6\xb7\xae\x93\x97\xcc\x42\x57\x1d\x9b\x91\xd3\x65\xde\xcc\x9c\x01\x1c\xb8\xd4\x96\xd4\xe9\x43\x6c\x6d\xea\xf2\x36\x4a\x77\x70\xc3\x7f\xc8\x73\x50\xfa\xfb\x61\xea\x99\x14\xc9\xd8\xb4\xf5\xf8\x35\x6c\x1b\xd2\x1d\x6d\xae\x42\xf0\x23\x88\x66\x07\x38\x56\x35\x7f\x99\x54\x73\x52\xcd\xa7\x56\x4d\xa1\x38\xec\x84\x4a\xca\x87\x47\xeb\x66\xbd\xed\x11\xda\xf9\x99\x41\xf7\x6f\xb8\x71\x90\x80\xf0\x68\x72\xde\xdc\x57\xc6\x38\xbb\x97\xdf\x88\xb2\xbf\xd2\x71\x91\x81\x42\x4b\x6a\x4f\x9f\xd7\xd4\x27\xbd\x7f\x02\xbd\xff\x82\x82\xd2\xf7\xf9\x24\xf6\x93\xd8\x7f\x95\xff\x90\x2f\x8f\xd0\xfa\xf9\xa4\xf5\x93\xd6\x1f\xa5\xf5\xe3\x52\xca\x75\xdc\x9f\x76\x7d\xd1\x1c\x58\x1c\xa3\xe6\x9f\xbf\xbd\x12\x71\xee\xcd\x1f\x64\x42\x2a\xeb\xef\x4b\xc1\x03\xbe\x93\x64\x3f\xb5\x64\x7f\x4d\x1d\x9c\xf4\xfa\x07\xd2\xeb\xc1\x3f\xe7\xc7\x08\xf6\x8b\x49\xb0\x27\xc1\x7e\x42\xc1\xb6\xa8\x0d\x2c\xad\xf8\x08\xcb\xd5\x1e\xe1\x01\xf1\x76\x76\xdf\xf8\xcf\xd8\x37\xce\x21\x5e\xea\x24\xe9\xf0\x9d\xa4\xf2\x28\xa9\xe4\x10\x8f\x55\xc6\xa4\x96\xff\x87\x5a\x9e\x54\xc7\xba\xbe\x73\x2d\xe5\xbc\x8e\x66\x65\x6e\xa8\x8d\x53\xc8\xd8\x5f\x60\xac\xd0\xee\xec\xf9\xbc\x84\x71\x2f\xab\x6f\xd7\x66\x53\x5a\x22\x4b\x82\xaf\xcb\x08\x59\x2e\x19\x0a\x95\x0c\xbf\xe4\xb7\x1f\xb6\x7d\x21\x36\xeb\xeb\xb2\x6b\xa9\xd2\xf7\x67\xd1\x45\x56\x05\x9d\xa2\xae\x40\xda\xd9\x97\x8b\x78\xe3\x87\x64\xb5\xbb\x62\xbf\x14\x0a\xc1\x6c\x99\x0c\x0b\x91\x5e\xb4\xa5\xd6\xf8\xe6\x5f\xce\xc3\x97\x28\x6b\x9f\x2f\x82\xe7\x28\x7c\x39\x9f\x85\x2b\x41\x27\xce\x83\xe7\xa8\xfa\x96\xdf\x75\xf5\xa3\xf6\xc3\x96\x56\x01\xab\xc7\xcb\x6f\xe1\x14\x25\x99\x56\x02\xb5\xa9\x7f\xa0\xa4\x85\xd7\x68\xfa\xea\xf2\x3a\x7b\xf1\xf7\xe6\x5d\x15\xed\x6d\x93\x91\x68\x76\x72\xf8\x27\x00\x00\xff\xff\x22\xec\x09\x54\x3e\x21\x00\x00")

func es_dashboard_dataJsonBytes() ([]byte, error) {
	return bindataRead(
		_es_dashboard_dataJson,
		"es_dashboard_data.json",
	)
}

func es_dashboard_dataJson() (*asset, error) {
	bytes, err := es_dashboard_dataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "es_dashboard_data.json", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5a, 0x46, 0xe9, 0xd1, 0x18, 0xcb, 0xff, 0x63, 0x5e, 0xd6, 0x30, 0x59, 0x59, 0x16, 0x1e, 0xc9, 0x1c, 0xa7, 0x6b, 0xe1, 0x2e, 0x3, 0x1b, 0x66, 0xeb, 0xb9, 0xfa, 0xec, 0xe6, 0x5f, 0xb2, 0x5a}}
	return a, nil
}

var _outputsTf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x3d\x6e\xc4\x20\x10\x85\x7b\x4e\x81\xb6\x4c\x41\xe3\x3a\x55\xca\x94\x39\x00\x1a\xc3\x53\xc2\xda\x06\xc4\x0c\x4e\xac\x28\x77\x8f\xd6\x3f\x92\x9d\xdd\xd8\xa5\xdf\x7c\x1f\x6f\x04\xa9\x4a\xae\xa2\x2f\x21\xb2\x50\x74\xe0\x8b\xfe\x56\x5a\x8f\xd4\x57\xe8\x67\x4d\x9f\x6c\xb7\xc8\x50\xce\x96\x51\x46\x14\xf3\xa4\x7e\x94\xda\x58\xdf\xbe\xf4\x95\x05\xe5\x9e\x2d\x9e\xad\x5b\x42\x8b\xe8\x73\x0a\x51\xcc\xdf\x1f\x7c\xd4\xd1\x3b\xa2\x9c\xf5\xe8\x13\x79\x01\x8b\x9d\x27\x8f\xf0\x00\x29\xc1\xf1\xdb\x5c\xf3\xc4\xb1\xce\xad\xfb\xec\x0d\xb9\xa4\xaf\xe9\x84\x9c\xf3\x07\x1c\x7a\x62\x09\xee\xbf\x93\xd7\x98\x41\xc5\x7d\x58\x9f\x06\x0a\xd1\xe0\x51\x01\x6e\xda\xea\x3a\xc8\xbd\x83\x1b\xbb\x44\x66\x9b\x39\x72\xaf\x38\x14\xbf\x7d\x6b\x79\x1a\x2c\x39\x07\x66\xdb\x61\x32\xdc\x74\x98\x94\xd6\x8c\xc8\x41\xc2\x78\xf3\x4b\xa9\xd8\xdb\xae\xa9\x5d\x56\x39\xbb\x89\x6b\x6a\xf7\x2f\xe2\x37\x00\x00\xff\xff\x60\x45\xf6\xcb\x4d\x02\x00\x00")

func outputsTfBytes() ([]byte, error) {
	return bindataRead(
		_outputsTf,
		"outputs.tf",
	)
}

func outputsTf() (*asset, error) {
	bytes, err := outputsTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "outputs.tf", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0x70, 0xf7, 0xd6, 0x47, 0x42, 0xdc, 0xec, 0xe0, 0xb8, 0xf6, 0x15, 0x4e, 0x63, 0xad, 0x4, 0x1b, 0x70, 0xbc, 0x59, 0xf3, 0x2d, 0xda, 0xc, 0x27, 0xe3, 0xeb, 0x45, 0x8e, 0xcb, 0xb8, 0xec}}
	return a, nil
}

var _variablesTf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xcf\x8e\xd4\x30\x0c\xc6\xef\x7d\x0a\xab\x5c\x40\x82\x8a\x19\xb4\xe2\x34\x47\x9e\x02\x21\x2b\x4d\x3d\x9d\x30\xf9\x87\x9d\x74\x29\x68\xde\x1d\xb5\x5d\xa4\x56\xcd\xd2\x0b\x3d\x55\xfe\x7d\x76\xec\x4f\xf6\xa0\xd8\xa8\xd6\x12\xd4\xda\x66\x49\xc4\xe8\x95\xa3\x1a\x7e\x57\x8f\xaa\xda\xc3\x21\x6a\x34\xdd\xab\x58\x72\xeb\x29\x95\x14\x2a\x46\x34\x5e\x92\xf2\x9a\x50\x87\xec\xd3\xbf\x25\x69\x8c\xfb\x2e\x54\x4f\x3e\x1d\x96\xd9\x8a\x56\x85\xde\xc0\x17\xab\x24\x19\x2d\xa4\x58\xdf\xe0\x6f\x8e\xac\xd3\x49\x8e\x1e\x58\x2b\x8a\x6d\x92\xe0\x40\x2c\x26\xf8\x22\x8a\xba\x14\xd6\x4c\x2a\x11\x72\xb0\xc5\x82\xd4\x0a\x86\x98\x4c\xf0\x32\x61\x80\x8e\xae\x2a\xdb\x04\x17\xf8\x5a\x01\xc0\x1c\x9b\xbe\x21\xd8\xec\x96\xc6\xe0\x02\x75\x1f\xcf\xf5\x96\x88\xf9\x35\x91\xf3\xc7\x39\xfc\x78\x5f\x01\x7c\xdb\x3e\x17\x39\xfc\x1c\x0f\x66\xec\xda\x23\x9b\xd6\x0a\xf2\xbd\xf1\x07\x45\xac\x12\x29\x29\x96\xdc\xb5\xa3\x00\x2f\xd3\x39\x15\xdf\x2a\x3f\xbe\xdb\xd8\xb1\x18\x51\xab\xcc\x81\xd5\x07\x37\xca\x0f\x5b\x2f\x06\x5c\xa0\x7e\x6a\x3e\x37\x73\x08\x17\xde\x9c\x9b\xd3\xa9\x39\xd5\x9b\x9c\x18\x24\xf5\x4c\x73\xe2\x05\xea\xd3\xa4\x99\x14\x8f\x5d\x6f\x59\x88\x8b\xf7\xd2\xb5\x18\x95\xc8\x73\xe0\xfd\x29\xcc\x33\x4d\xbf\x18\x89\xaf\x81\xdd\x3c\xbf\xf1\x62\xfa\x5b\xda\x5b\x20\x72\xc3\x98\x5b\x6b\x34\xde\x69\xdc\x61\xa7\x52\x22\x76\x41\x12\x5a\xa3\xc9\x0b\xe1\xd5\x14\x76\x88\x43\x48\xd8\xda\xa0\xef\xd8\xd1\x60\x34\xfd\x9f\x35\x7a\x7a\x7d\x8d\xbe\x87\x16\x85\x78\x20\x3e\x5a\x95\x92\xb2\xb8\x75\xf2\x09\xdb\xac\xef\x94\xb0\xcb\x2e\x62\x66\xb3\x3f\xff\x67\xc1\xc8\xa1\xe8\xc1\xc4\x98\xfa\xd2\x61\x4e\x48\xb9\x97\x72\x7f\x02\x00\x00\xff\xff\x4d\x3f\x9f\x32\x15\x05\x00\x00")

func variablesTfBytes() ([]byte, error) {
	return bindataRead(
		_variablesTf,
		"variables.tf",
	)
}

func variablesTf() (*asset, error) {
	bytes, err := variablesTfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "variables.tf", size: 0, mode: os.FileMode(0644), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0x9, 0x9c, 0x4f, 0x30, 0xbb, 0x4a, 0x80, 0xcc, 0x9e, 0x65, 0xa, 0x47, 0xab, 0xae, 0x71, 0xb9, 0x6b, 0xf9, 0x7d, 0xc2, 0x4b, 0xb1, 0x48, 0x1a, 0x4d, 0x72, 0x56, 0x7b, 0x8f, 0x34, 0xdd}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".terraform.lock.hcl":    TerraformLockHcl,
	"cluster.tf":             clusterTf,
	"dashboard.yaml":         dashboardYaml,
	"dashboard_data.json":    dashboard_dataJson,
	"datasource.yaml":        datasourceYaml,
	"es_dashboard_data.json": es_dashboard_dataJson,
	"outputs.tf":             outputsTf,
	"variables.tf":           variablesTf,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".terraform.lock.hcl":    {TerraformLockHcl, map[string]*bintree{}},
	"cluster.tf":             {clusterTf, map[string]*bintree{}},
	"dashboard.yaml":         {dashboardYaml, map[string]*bintree{}},
	"dashboard_data.json":    {dashboard_dataJson, map[string]*bintree{}},
	"datasource.yaml":        {datasourceYaml, map[string]*bintree{}},
	"es_dashboard_data.json": {es_dashboard_dataJson, map[string]*bintree{}},
	"outputs.tf":             {outputsTf, map[string]*bintree{}},
	"variables.tf":           {variablesTf, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
