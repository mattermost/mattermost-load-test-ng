# AWS Configuration
AWSAMI = 'ami-003d3d03cfe1b0468'
AWSProfile = 'mm-loadtest'
AWSRegion = 'us-east-1'

# Mattermost configuration
AdminEmail = 'sysadmin@sample.mattermost.com'
AdminPassword = 'Sys@dmin-sample1'
AdminUsername = 'sysadmin'
MattermostConfigPatchFile = ''
MattermostDownloadURL = 'https://latest.mattermost.com/mattermost-enterprise-linux'
MattermostLicenseFile = ''
S3BucketDumpURI = ''
SiteURL = ''
EnableNetPeekMetrics = false

# Agent configuration
AgentInstanceCount = 2
AgentInstanceType = 'c5.xlarge'
EnableAgentFullLogs = true

# App servers configuration
AppInstanceCount = 1
AppInstanceType = 'c5.xlarge'

# Cluster configuration
ClusterName = 'loadtest'
ClusterSubnetID = ''
ClusterVpcID = ''

# Database configuration
DBDumpURI = ''

# Load test configuration
LoadTestDownloadURL = 'https://github.com/mattermost/mattermost-load-test-ng/releases/download/v1.15-rc2/mattermost-load-test-ng-v1.15-rc2-linux-amd64.tar.gz'
SSHPublicKey = '~/.ssh/id_rsa.pub'
TerraformStateDir = '/var/lib/mattermost-load-test-ng'

# Proxy server configuration
ProxyInstanceType = 'c5.xlarge'
ProxyInstanceCount = 1

[ElasticSearchSettings]
CreateRole = false
InstanceCount = 0
InstanceType = 'r6g.large.search'
Version = 'Elasticsearch_7.10'
VpcID = ''

[ExternalBucketSettings]
AmazonS3AccessKeyId = ''
AmazonS3Bucket = ''
AmazonS3Endpoint = 's3.amazonaws.com'
AmazonS3PathPrefix = ''
AmazonS3Region = 'us-east-1'
AmazonS3SSE = false
AmazonS3SSL = true
AmazonS3SecretAccessKey = ''
AmazonS3SignV2 = false

[ExternalDBSettings]
DataSource = ''
DataSourceReplicas = []
DataSourceSearchReplicas = []
DriverName = 'cockroach'

[JobServerSettings]
InstanceCount = 0
InstanceType = 'c5.xlarge'

[LogSettings]
ConsoleJson = false
ConsoleLevel = 'INFO'
EnableColor = true
EnableConsole = true
EnableFile = true
FileJson = true
FileLevel = 'INFO'
FileLocation = 'deployer.log'

[PyroscopeSettings]
EnableAgentProfiling = true
EnableAppProfiling = true
BlockProfileRate = 0

[Report]
Label = '{instance=~"app.*"}'

[[Report.GraphQueries]]
Name = 'CPU Utilization'
Query = 'avg(rate(mattermost_process_cpu_seconds_total{instance=~"app.*"}[1m])* 100)'

[[Report.GraphQueries]]
Name = 'Heap In Use'
Query = 'avg(go_memstats_heap_inuse_bytes{instance=~"app.*:8067"})'

[[Report.GraphQueries]]
Name = 'Stack In Use'
Query = 'avg(go_memstats_stack_inuse_bytes{instance=~"app.*:8067"})'

[[Report.GraphQueries]]
Name = 'Goroutines In Use'
Query = 'sum(go_goroutines{instance=~"app.*:8067"})'

[[Report.GraphQueries]]
Name = 'RPS'
Query = 'sum(rate(mattermost_http_requests_total{instance=~"app.*:8067"}[1m]))'

[[Report.GraphQueries]]
Name = 'Avg Store times'
Query = 'sum(rate(mattermost_db_store_time_sum{instance=~"app.*:8067"}[1m])) / sum(rate(mattermost_db_store_time_count{instance=~"app.*:8067"}[1m]))'

[[Report.GraphQueries]]
Name = 'P99 Store times'
Query = 'histogram_quantile(0.99, sum(rate(mattermost_db_store_time_bucket[1m])) by (le))'

[[Report.GraphQueries]]
Name = 'Avg API times'
Query = 'sum(rate(mattermost_api_time_sum[1m])) / sum(rate(mattermost_api_time_count[1m]))'

[[Report.GraphQueries]]
Name = 'P99 API times'
Query = 'histogram_quantile(0.99, sum(rate(mattermost_api_time_bucket[1m])) by (le))'

[StorageSizes]
Agent = 10
App = 10
ElasticSearch = 20
Job = 50
Metrics = 50
Proxy = 10

[TerraformDBSettings]
ClusterIdentifier = ''
DBParameters = []
EnablePerformanceInsights = true
InstanceCount = 1
InstanceEngine = 'aurora-postgresql'
InstanceType = 'db.r6g.large'
Password = 'mostest80098bigpass_'
UserName = 'mmuser'
